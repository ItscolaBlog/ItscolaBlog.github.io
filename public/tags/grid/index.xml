<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>grid on White_cola Blog</title>
    <link>https://itscola.github.io/tags/grid/</link>
    <description>Recent content in grid on White_cola Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>我们都渴望的安静，促使我们不再安静。
 Blog Powered by Hugo.</copyright>
    <lastBuildDate>Fri, 05 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://itscola.github.io/tags/grid/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>前端 Grid 布局 - 网格布局 （一）- 响应式 元素排列 更强且灵活</title>
      <link>https://itscola.github.io/blog/frontside/grid-layout-01/</link>
      <pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://itscola.github.io/blog/frontside/grid-layout-01/</guid>
      <description>一，GridLayout GridLayout 网格布局，实现 复杂元素排列 及 响应式，何必要用 CSS 框架。 二，Grid 外部容器基本操作 1. 定义 Grid 布局 - display: grid; 在外层容器 CSS 上加上 display: grid 以开启 Grid 网格布局。
其内部的元素将变为 Grid 布局的元素。
2. 核心概念 行和列 Grid 布局会划分多条 水平线 垂直线，交叉来划分出网格，统称为 网格线。
使用 grid-template-columns 属性，可以指定按照多少列排列，并指定每列中的元素宽度所占大小。 如图，我们指定了 4 个 100px , 则意味着划分成了 4 列进行排列。每一列元素的宽度占 100px。 当然 如果指定 3 个，就意味着分为 3 列。 有几列，看有多少个值。 当我们改为 grid-template-columns: 100px 200px 100px 100px; 第二列的元素所占宽度变为 200px。  那么，我们也可以通过 grid-template-rows 属性来指定行，我们可以指定多少行，每行占多少大小。
下面我将加更多div ，去掉 height CSS 属性 (因为要用 grid-template-rows 来指定每行大小了)。 并设定为 grid-template-rows: 100px 200px 100px 100px; 结果如图 总共 4 行，第二行所占行大小为 200px。 3.</description>
    </item>
    
  </channel>
</rss>
