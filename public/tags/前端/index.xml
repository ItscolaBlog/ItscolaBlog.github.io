<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>前端 on White_cola Blog</title>
    <link>https://itscola.github.io/tags/%E5%89%8D%E7%AB%AF/</link>
    <description>Recent content in 前端 on White_cola Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>我们都渴望的安静，促使我们不再安静。
 Blog Powered by Hugo.</copyright>
    <lastBuildDate>Fri, 05 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://itscola.github.io/tags/%E5%89%8D%E7%AB%AF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>前端 Grid 布局 - 网格布局 （一）- 响应式 元素排列 更强且灵活</title>
      <link>https://itscola.github.io/blog/frontside/grid-layout-01/</link>
      <pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://itscola.github.io/blog/frontside/grid-layout-01/</guid>
      <description>一，GridLayout GridLayout 网格布局，实现 复杂元素排列 及 响应式，何必要用 CSS 框架。 二，Grid 外部容器基本操作 1. 定义 Grid 布局 - display: grid; 在外层容器 CSS 上加上 display: grid 以开启 Grid 网格布局。
其内部的元素将变为 Grid 布局的元素。
2. 核心概念 行和列 Grid 布局会划分多条 水平线 垂直线，交叉来划分出网格，统称为 网格线。
使用 grid-template-columns 属性，可以指定按照多少列排列，并指定每列中的元素宽度所占大小。 如图，我们指定了 4 个 100px , 则意味着划分成了 4 列进行排列。每一列元素的宽度占 100px。 当然 如果指定 3 个，就意味着分为 3 列。 有几列，看有多少个值。 当我们改为 grid-template-columns: 100px 200px 100px 100px; 第二列的元素所占宽度变为 200px。  那么，我们也可以通过 grid-template-rows 属性来指定行，我们可以指定多少行，每行占多少大小。
下面我将加更多div ，去掉 height CSS 属性 (因为要用 grid-template-rows 来指定每行大小了)。 并设定为 grid-template-rows: 100px 200px 100px 100px; 结果如图 总共 4 行，第二行所占行大小为 200px。 3.</description>
    </item>
    
    <item>
      <title>前端 Flex 布局 - 弹性布局 （一）- 对于简单元素排列及响应式</title>
      <link>https://itscola.github.io/blog/frontside/flex-layout-01/</link>
      <pubDate>Thu, 28 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://itscola.github.io/blog/frontside/flex-layout-01/</guid>
      <description>一, Flex 布局的概念 Flex 为 flexible box 缩写，也就是 “弹性布局”。 依靠它可以实现一些响应式操作，比如我们要一个容器固定在中间，即使我们的窗口大小发生变化。
同时也解决了元素的排列问题，让元素按行，按列排列。
二, 使用 flex 布局 给外层容器的 CSS 加上 display: flex 即可开启容器的 flex 布局。
三, display: flex - 默认 容器内元素会水平排列。 子元素默认按行排列。 这时候存在 水平的主轴 和 垂直交叉轴（竖轴）。 元素会排列在水平的主轴左边，垂直交叉轴上边。
这时候当我们改变窗口大小，flex 布局内的元素也会随之改变，就这样实现了响应式。 之后我们加上其它属性，同样会有响应式。 下面我们来看常见属性的常见项。
四, justify-content 属性 - 主轴上的对齐方式 使用 justify-content 属性，我们可以定义 flex 布局内，元素的主轴上的对齐方式。 比如: justify-content: flex-start; 对其方式分别有 flex-start , flex-end , center , space-between , space-around 分别对应了 ： 左对齐，右对齐，居中，两端对齐 平分空间，两侧间隔相等对齐 中间间隔大一倍
1. justify-content: center; 居中对齐 响应式同样存在，后面的属性也不多说了。 2.</description>
    </item>
    
    <item>
      <title>Bootstrap前端开发框架-栅格系统-2</title>
      <link>https://itscola.github.io/blog/browserside/2.bootstrap/</link>
      <pubDate>Mon, 17 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://itscola.github.io/blog/browserside/2.bootstrap/</guid>
      <description>Bootstrap-栅格系统-2 在读这篇文章前, 如果你不了解 栅格系统 的概念, 点击此处去上一篇
欢迎来到前端教程的bootstrap系列，
 Bootstrap 是最受欢迎的 HTML、CSS 和 JS 框架，用于开发响应式布局、移动设备优先的 WEB 项目。
 开发一个网站，非常简单，也许只需要1天html，css，js的学习，就能学会。
但是如果要开发一个完善的网站，那就需要花点力气了。
要学习前端，bootstrap是一个必学的内容。
栅格系统的文章将 教你 如何实现网页面根据屏幕尺寸自动变化(页面响应式)。
我们的Bootstrap系列为了读者的学习效率，将不对框架作使用之外的介绍。那些介绍你可以通过搜索引擎搜索来获得相关信息。在阅读这个系列之前，确保你已经有html，css，js基础。
 栅格系统我们将分为两篇文章来讲，第一篇为概念与原理的讲解，第二篇是实际写代码操作的讲解。
  栅格系统为Bootstrap的第一章，我们之所以不和其它教程一样先讲Bootstrap中其它的，是因为这个比起其它内容更重要，也更核心。 注意，我们这是“教程”，不是“文档”。
 一. Bootstrap的安装 注意,如果你要使用bootstrap.js 还需要JQ作为库. 这里仅演示了Bootstrap.css中的栅格系统.

1. 下载 我们可以在 Bootstrap中文文档 的网站进行安装.
首先我们将看到,这边有用于 生产环境的Bootstrap 和 Bootstrap源码.
生产环境的是经过压缩的, 为了加载更快, 而我们要学习它,那么选择源码. 点击下载源码. 下载好后解压,并找到dist文件夹,然后再找到js文件夹. Bootstrap.js 为没有压缩过的,占用相比大些.
Bootstrap.min.js 为压缩过的, 占用相比较小.
2. 引入到项目 首先将dist文件夹内的所有文件夹(包括内容), 复制进项目中. 在项目的html代码中, 引入Bootstrap的css文件 与 js文件.
二. 栅格系统的使用 1. 定义容器 2. 定义行 3.</description>
    </item>
    
    <item>
      <title>Bootstrap前端开发框架-栅格系统-1</title>
      <link>https://itscola.github.io/blog/browserside/1.bootstrap/</link>
      <pubDate>Sun, 16 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://itscola.github.io/blog/browserside/1.bootstrap/</guid>
      <description>Bootstrap-栅格系统-1 欢迎来到前端教程的bootstrap系列，
 Bootstrap 是最受欢迎的 HTML、CSS 和 JS 框架，用于开发响应式布局、移动设备优先的 WEB 项目。
 开发一个网站，非常简单，也许只需要1天html，css，js的学习，就能学会。
但是如果要开发一个完善的网站，那就需要花点力气了。
要学习前端，bootstrap是一个必学的内容。
栅格系统的文章将 教你 如何实现网页面根据屏幕尺寸自动变化(页面响应式)。
我们的Bootstrap系列为了读者的学习效率，将不对框架作使用之外的介绍。那些介绍你可以通过搜索引擎搜索来获得相关信息。在阅读这个系列之前，确保你已经有html，css，js基础。
 栅格系统我们将分为两篇文章来讲，第一篇为概念与原理的讲解，第二篇是实际写代码操作的讲解。
  栅格系统为Bootstrap的第一章，我们之所以不和其它教程一样先讲Bootstrap中其它的，是因为这个比起其它内容更重要，也更核心。 注意，我们这是“教程”，不是“文档”。
 一.响应式 1. 响应式 网站响应式 指的是一个网站下，无论我们用什么大小的屏幕/设备访问。网站都能通过自动变化布局，按我们的需求展现网页的内容。
2. 为什么要响应式 我们在电脑上开发好一个前端页面后，当我们用手机访问，它显示效果并不一定会好，因为布局的内容对于手机来说太小了，又或是布局变混乱了。
如果我们针对不同显示设备做不同的网站，那将会非常麻烦。
通过响应式布局，我们可以在同一个网站上，使用不同的设备，显示出针对不同设备的不同布局。
3. 响应式效果 比如 Bootstrap中文文档 这个网站。
手机访问是这样的：
电脑/ipad 访问是这样的：
这是同一个网站，只不过网站根据我们的显示面积进行了布局的调整。
布局不同，当显示的内容是一样的。
二. 栅格系统的概念 1. 什么是数栅格系统 栅格系统可以实现自动化的网站响应式，它通过将网站页面内容划分为“栅格”，然后对不同的尺寸的显示屏自动调整“栅格”，来做到。
也就是说，我们需要将我们网站的元素放到框架提供的“栅格”里，然后由“栅格系统”自动化调整”栅格布局“。
2. 栅格系统从哪来 “栅格系统” 来自各种前端框架，本期我们将学习Bootstrap的栅格系统。
三. 栅格系统做响应式的原理 1. 栅格 栅格系统会将我们的页面中定义的“行”，平均分成12个格，我们主要做的仅仅是将html元素装入对应的格。
html元素可以是一个div，可以是一堆 文字，又可以是一个图片&amp;hellip;&amp;hellip;
平均分的12个格是根据尺寸来分的。手机上分的12个格的空间明显要小于电脑端的12个格。
就比如，同一个元素，在PC端占用6格，而在手机端占用12格。这就是以 栅格系统 做响应式的基本原理。 通常会根据栅格系统自动调整.
不仅如此，就算是PC端，栅格系统 也会根据不同尺寸屏幕，自动调整 “栅格”以及其元素 的尺寸，</description>
    </item>
    
  </channel>
</rss>
